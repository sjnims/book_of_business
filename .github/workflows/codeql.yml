name: "CodeQL"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '17 8 * * 1'  # Weekly on Monday at 8:17 AM UTC (randomized to avoid load spikes)

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # For Rails apps: analyzes Ruby code and JavaScript (Stimulus/Turbo/Import Maps)
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
      pull-requests: read  # For PR comments

    strategy:
      fail-fast: false
      matrix:
        language: [ 'ruby', 'javascript' ]
        include:
          - language: ruby
            build-mode: none
          - language: javascript
            build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # For better git context in analysis

    # Setup Ruby environment for better analysis
    - name: Setup Ruby (for Ruby analysis)
      if: matrix.language == 'ruby'
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true

    # Install Rails dependencies for more accurate analysis
    - name: Install dependencies (for Ruby analysis)
      if: matrix.language == 'ruby'
      run: |
        bundle install
        # Precompile assets to ensure all Ruby code is available
        bundle exec rails assets:precompile || true
      env:
        RAILS_ENV: test

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # Use our comprehensive configuration file
        config-file: ./.github/codeql/codeql-config.yml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"
        output: sarif-results
        upload: true
        
    # Upload SARIF as artifact for deeper investigation
    - name: Upload SARIF as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: codeql-sarif-${{ matrix.language }}
        path: sarif-results/**/*.sarif
        retention-days: 30

    # Additional security checks for Ruby
    - name: Run additional Ruby security analysis
      if: matrix.language == 'ruby' && github.event_name == 'pull_request'
      run: |
        # Check for hardcoded secrets
        echo "Checking for potential hardcoded secrets..."
        ! grep -r -E "(password|secret|key|token)\s*[:=]\s*[\"'][^\"']+[\"']" app/ lib/ config/ --include="*.rb" || echo "Warning: Potential hardcoded secrets found"
        
        # Check for SQL injection vulnerabilities
        echo "Checking for potential SQL injection..."
        ! grep -r -E "where\s*\(\s*[\"'].*#\{.*\}.*[\"']\s*\)" app/ lib/ --include="*.rb" || echo "Warning: Potential SQL injection found"
        
        # Check for command injection
        echo "Checking for potential command injection..."
        ! grep -r -E "(system|exec|%x|`)" app/ lib/ --include="*.rb" || echo "Warning: Potential command injection found"

  # Summary job to ensure all analyses passed
  codeql-summary:
    name: CodeQL Analysis Summary
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    
    steps:
    - name: Check analysis results
      run: |
        if [[ "${{ needs.analyze.result }}" != "success" ]]; then
          echo "::error::CodeQL analysis failed or was cancelled"
          exit 1
        fi
        echo "✅ All CodeQL analyses completed successfully"

  # Comment on PR with security findings (if any)
  comment-pr:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: analyze
    if: github.event_name == 'pull_request' && failure()
    permissions:
      pull-requests: write
      
    steps:
    - name: Comment on PR about security findings
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '⚠️ **Security Alert**: CodeQL analysis found potential security issues. Please review the Security tab for details before merging.'
          })